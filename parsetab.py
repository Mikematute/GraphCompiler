
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD AND ARC BOOL CHAR COLON COMA CTE_BOO CTE_CHAR CTE_FLO CTE_INT CTE_STRING DEG DELETE DIAMETER DIRECTED DIV DO DOT ELSE EQL EQUALTO FLOAT FOR ID IF IN INT LBRACK LCORCH LESSEQUAL LESST LPAREN MAIN MOREEQUAL MORET MUL NODE NOT NOTEQUALTO OR PRINT PROGRAM RBRACK RCORCH RESD RPAREN SCOLO SHORTPATH STRING SUB SUMA UNDIRECTED VAR VOID WHILEprogram : PROGRAM ID np_var_a1 SCOLO np_var_a2 vars function bodyvars : VAR type vars_1 SCOLO vars\n            | emptyvars_1 : ID np_var_2 vars_2\n              | ID np_var_2 vars_2 COMA vars_1vars_2 : array_declare\n              | emptyfunction : function_t ID np_var_b2 np_var_b3 LPAREN function_v RPAREN LBRACK vars statutes RBRACK function\n                | emptyfunction_t : VOID np_var_1\n                  | t_number\n                  | t_string\n                  | t_bool\n                  | t_graphfunction_v : function_v1\n                  | emptyfunction_v1 : type np_var_b4 ID np_var_b5\n                   | type np_var_b4 ID np_var_b5 COMA function_v1\n                   | type np_var_b4 ID np_var_b5 array_declare\n                   | type np_var_b4 ID np_var_b5 array_declare COMA function_v1body : MAIN np_var_c1 LPAREN RPAREN LBRACK np_var_c2 vars statutes RBRACK debug np_var_c3type : t_number\n            | t_string\n            | t_bool\n            | t_grapht_number : INT np_var_1\n                | FLOAT np_var_1t_string : STRING np_var_1\n                | CHAR np_var_1t_bool : BOOL np_var_1t_graph : NODE np_var_1\n               | ARC np_var_1\n               | UNDIRECTED np_var_1\n               | DIRECTED np_var_1array_declare : LCORCH CTE_INT RCORCH array_declare_1array_declare_1 : LCORCH CTE_INT RCORCH array_declare_1\n                       | emptystatutes : statutes_1 statutes\n                | emptystatutes_1 : assignation\n                  | writing\n                  | condition\n                  | cycle\n                  | function_callassignation : ID EQL expression SCOLOwriting : PRINT LPAREN writing_1 RPAREN SCOLOwriting_1 : expression\n                 | CTE_STRING\n                 | writing_2writing_2 : expression SUMA writing_1\n                 | CTE_STRING SUMA writing_1condition : IF LPAREN expression RPAREN LBRACK statutes RBRACK condition_1condition_1 : ELSE LBRACK statutes RBRACK\n                   | emptycycle : c_while\n             | c_do\n             | c_for\n             | c_forinc_while : WHILE LPAREN expression RPAREN LBRACK statutes RBRACKc_do : DO LBRACK statutes RBRACK WHILE LPAREN expression RPAREN SCOLOc_for : FOR LPAREN ID SCOLO expression SCOLO assignation RPAREN LBRACK statutes RBRACKc_forin : FOR LPAREN ID IN ID RPAREN LBRACK statutes RBRACKfunction_call : ID LPAREN function_call_1 RPAREN SCOLOfunction_call_1 : function_call_2\n                       | emptyfunction_call_2 : expression\n                       | ID\n                       | expression SCOLO function_call_2\n                       | ID SCOLO function_call_2expression : exp_lv1\n                  | exp_lv1 AND expression\n                  | exp_lv1 OR expressionexp_lv1 : exp_lv2 exp_lv1_1exp_lv1_1 : LESST exp_lv2\n                 | MORET exp_lv2\n                 | LESSEQUAL exp_lv2\n                 | MOREEQUAL exp_lv2\n                 | EQUALTO exp_lv2\n                 | NOTEQUALTO exp_lv2\n                 | emptyexp_lv2 : exp_lv3\n               | exp_lv3 SUMA exp_lv2\n               | exp_lv3 SUB exp_lv2exp_lv3 : exp_lv4\n               | exp_lv4 MUL exp_lv3\n               | exp_lv4 DIV exp_lv3\n               | exp_lv4 RESD exp_lv3exp_lv4 : exp_lv5\n               | NOT exp_lv5exp_lv5 : RPAREN expression LPAREN\n               | var_cte\n               | method\n               | ID\n               | ID array_accessarray_access : LCORCH arrary_access_1 RCORCH arrary_access_2arrary_access_1 : CTE_INT\n                       | IDarrary_access_2 : LCORCH arrary_access_1 RCORCH arrary_access_2\n                       | emptyvar_cte : CTE_INT\n               | CTE_FLO\n               | CTE_BOO\n               | CTE_STRING\n               | CTE_CHARmethod : ID DOT method_t LPAREN method_1 RPARENmethod_1 : method_1_1\n                | emptymethod_1_1 : method_v\n                  | method_v COMA method_1_1method_t : DEG\n                | SHORTPATH\n                | DIAMETER\n                | ADD\n                | DELETE\n                | ARCmethod_v : ID\n                | LBRACK ID COMA ID RBRACKnp_var_a1 : emptynp_var_a2 : emptynp_var_b1 : emptynp_var_b2 : emptynp_var_b3 : emptynp_var_b4 : emptynp_var_b5 : emptynp_var_c1 : emptynp_var_c2 : emptynp_var_c3 : emptynp_var_1 : emptynp_var_2 : emptydebug : emptyempty :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,34,110,123,124,157,158,],[0,-1,-131,-131,-130,-21,-127,]),'ID':([2,11,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,37,38,39,40,41,42,43,44,45,46,47,54,60,67,69,73,76,77,79,80,84,85,89,91,92,93,94,95,99,100,101,102,106,112,113,114,115,116,117,118,132,133,161,162,163,164,166,167,168,169,170,171,173,174,175,176,177,180,182,184,185,189,190,218,220,223,224,228,232,233,240,241,244,245,249,251,254,256,261,263,264,265,266,272,273,],[3,-3,36,-131,-11,-12,-13,-14,-131,-131,-131,-131,-131,-131,-131,-131,-131,49,-22,-23,-24,-25,-10,-128,-26,-27,-28,-29,-30,-31,-32,-33,-34,-131,-2,49,-131,-131,-131,-126,86,-123,96,-131,96,-40,-41,-42,-43,-44,-55,-56,-57,-58,96,125,141,125,125,125,96,153,125,125,202,-45,125,125,125,125,125,125,125,125,125,125,125,125,125,141,141,125,125,125,227,-63,-46,96,96,235,125,247,252,202,-131,-59,96,235,-52,-54,267,96,-60,96,-62,-53,-61,]),'SCOLO':([3,4,5,48,49,55,56,61,62,63,74,75,82,83,109,122,125,126,127,128,129,130,131,134,135,136,137,138,139,140,141,145,153,159,165,172,178,181,183,203,204,205,206,207,208,209,210,211,212,213,214,215,216,226,229,242,243,250,257,262,268,],[-131,6,-118,54,-131,-131,-129,-4,-6,-7,-5,-131,-35,-37,-131,-36,-93,162,-70,-131,-81,-84,-88,-91,-92,-100,-101,-102,-103,-104,180,182,189,-94,-73,-80,-89,218,220,-71,-72,-74,-75,-76,-77,-78,-79,-82,-83,-85,-86,-87,-90,233,-131,-95,-99,-105,264,-131,-98,]),'VAR':([6,7,8,54,69,76,77,85,],[-131,10,-119,10,-131,10,-126,10,]),'VOID':([6,7,8,9,11,54,60,154,],[-131,-131,-119,15,-3,-131,-2,15,]),'INT':([6,7,8,9,10,11,54,60,66,120,154,156,],[-131,-131,-119,20,20,-3,-131,-2,20,20,20,20,]),'FLOAT':([6,7,8,9,10,11,54,60,66,120,154,156,],[-131,-131,-119,21,21,-3,-131,-2,21,21,21,21,]),'STRING':([6,7,8,9,10,11,54,60,66,120,154,156,],[-131,-131,-119,22,22,-3,-131,-2,22,22,22,22,]),'CHAR':([6,7,8,9,10,11,54,60,66,120,154,156,],[-131,-131,-119,23,23,-3,-131,-2,23,23,23,23,]),'BOOL':([6,7,8,9,10,11,54,60,66,120,154,156,],[-131,-131,-119,24,24,-3,-131,-2,24,24,24,24,]),'NODE':([6,7,8,9,10,11,54,60,66,120,154,156,],[-131,-131,-119,25,25,-3,-131,-2,25,25,25,25,]),'ARC':([6,7,8,9,10,11,54,60,66,120,154,156,160,],[-131,-131,-119,26,26,-3,-131,-2,26,26,26,26,199,]),'UNDIRECTED':([6,7,8,9,10,11,54,60,66,120,154,156,],[-131,-131,-119,27,27,-3,-131,-2,27,27,27,27,]),'DIRECTED':([6,7,8,9,10,11,54,60,66,120,154,156,],[-131,-131,-119,28,28,-3,-131,-2,28,28,28,28,]),'MAIN':([6,7,8,9,11,12,14,54,60,154,191,],[-131,-131,-119,-131,-3,35,-9,-131,-2,-131,-8,]),'PRINT':([11,54,60,69,76,77,84,85,89,91,92,93,94,95,99,100,101,102,106,117,162,218,220,223,224,244,245,249,254,256,263,264,265,266,272,273,],[-3,-131,-2,-131,-131,-126,97,-131,97,-40,-41,-42,-43,-44,-55,-56,-57,-58,97,97,-45,-63,-46,97,97,-131,-59,97,-52,-54,97,-60,97,-62,-53,-61,]),'IF':([11,54,60,69,76,77,84,85,89,91,92,93,94,95,99,100,101,102,106,117,162,218,220,223,224,244,245,249,254,256,263,264,265,266,272,273,],[-3,-131,-2,-131,-131,-126,98,-131,98,-40,-41,-42,-43,-44,-55,-56,-57,-58,98,98,-45,-63,-46,98,98,-131,-59,98,-52,-54,98,-60,98,-62,-53,-61,]),'WHILE':([11,54,60,69,76,77,84,85,89,91,92,93,94,95,99,100,101,102,106,117,162,188,218,220,223,224,244,245,249,254,256,263,264,265,266,272,273,],[-3,-131,-2,-131,-131,-126,103,-131,103,-40,-41,-42,-43,-44,-55,-56,-57,-58,103,103,-45,225,-63,-46,103,103,-131,-59,103,-52,-54,103,-60,103,-62,-53,-61,]),'DO':([11,54,60,69,76,77,84,85,89,91,92,93,94,95,99,100,101,102,106,117,162,218,220,223,224,244,245,249,254,256,263,264,265,266,272,273,],[-3,-131,-2,-131,-131,-126,104,-131,104,-40,-41,-42,-43,-44,-55,-56,-57,-58,104,104,-45,-63,-46,104,104,-131,-59,104,-52,-54,104,-60,104,-62,-53,-61,]),'FOR':([11,54,60,69,76,77,84,85,89,91,92,93,94,95,99,100,101,102,106,117,162,218,220,223,224,244,245,249,254,256,263,264,265,266,272,273,],[-3,-131,-2,-131,-131,-126,105,-131,105,-40,-41,-42,-43,-44,-55,-56,-57,-58,105,105,-45,-63,-46,105,105,-131,-59,105,-52,-54,105,-60,105,-62,-53,-61,]),'RBRACK':([11,54,60,69,76,77,84,85,88,89,90,91,92,93,94,95,99,100,101,102,106,111,117,119,152,162,218,220,223,224,230,231,244,245,249,254,256,259,263,264,265,266,267,269,270,272,273,],[-3,-131,-2,-131,-131,-126,-131,-131,110,-131,-39,-40,-41,-42,-43,-44,-55,-56,-57,-58,-131,-38,-131,154,188,-45,-63,-46,-131,-131,244,245,-131,-59,-131,-52,-54,266,-131,-60,-131,-62,271,272,273,-53,-61,]),'LPAREN':([35,36,50,51,52,53,58,59,96,97,98,103,105,125,127,128,129,130,131,134,135,136,137,138,139,140,159,165,172,178,179,193,194,195,196,197,198,199,203,204,205,206,207,208,209,210,211,212,213,214,215,216,225,229,242,243,250,262,268,],[-131,-131,57,-125,-131,-121,66,-122,113,114,115,116,118,-93,-70,-131,-81,-84,-88,-91,-92,-100,-101,-102,-103,-104,-94,-73,-80,-89,216,228,-110,-111,-112,-113,-114,-115,-71,-72,-74,-75,-76,-77,-78,-79,-82,-83,-85,-86,-87,-90,232,-131,-95,-99,-105,-131,-98,]),'LCORCH':([49,55,56,75,86,107,108,109,125,141,229,262,],[-131,64,-129,81,-131,64,-124,81,161,161,241,241,]),'COMA':([49,55,56,61,62,63,75,82,83,86,107,108,109,121,122,235,239,252,271,],[-131,-131,-129,67,-6,-7,-131,-35,-37,-131,120,-124,-131,156,-36,-116,251,261,-117,]),'RPAREN':([57,66,70,71,72,75,82,83,86,107,108,109,112,113,114,115,116,121,122,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,155,159,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,180,182,184,185,189,192,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,219,221,222,227,228,229,232,235,236,237,238,239,242,243,246,248,250,260,262,268,271,],[65,-131,78,-15,-16,-131,-35,-37,-131,-17,-124,-131,133,133,133,133,133,-19,-36,-93,-70,-131,-81,-84,-88,133,133,-91,-92,-100,-101,-102,-103,-104,-67,181,-64,-65,-66,183,-47,-48,-49,186,187,-18,-94,-45,133,133,-73,133,133,133,133,133,133,-80,133,133,133,133,133,-89,133,133,133,133,133,-20,-71,-72,-74,-75,-76,-77,-78,-79,-82,-83,-85,-86,-87,-90,-69,-68,-50,-51,234,-131,-131,133,-116,250,-106,-107,-108,-95,-99,257,258,-105,-109,-131,-98,-117,]),'CTE_INT':([64,81,112,113,114,115,116,132,133,161,163,164,166,167,168,169,170,171,173,174,175,176,177,180,182,184,185,189,232,241,],[68,87,136,136,136,136,136,136,136,201,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,201,]),'LBRACK':([65,78,104,186,187,228,234,251,255,258,],[69,85,117,223,224,240,249,240,263,265,]),'RCORCH':([68,87,200,201,202,253,],[75,109,229,-96,-97,262,]),'EQL':([96,247,],[112,112,]),'NOT':([112,113,114,115,116,133,163,164,166,167,168,169,170,171,173,174,175,176,177,180,182,184,185,189,232,],[132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,]),'CTE_FLO':([112,113,114,115,116,132,133,163,164,166,167,168,169,170,171,173,174,175,176,177,180,182,184,185,189,232,],[137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,]),'CTE_BOO':([112,113,114,115,116,132,133,163,164,166,167,168,169,170,171,173,174,175,176,177,180,182,184,185,189,232,],[138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,]),'CTE_STRING':([112,113,114,115,116,132,133,163,164,166,167,168,169,170,171,173,174,175,176,177,180,182,184,185,189,232,],[139,139,148,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,148,148,139,139,]),'CTE_CHAR':([112,113,114,115,116,132,133,163,164,166,167,168,169,170,171,173,174,175,176,177,180,182,184,185,189,232,],[140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,]),'MUL':([125,130,131,134,135,136,137,138,139,140,141,148,159,178,216,229,242,243,250,262,268,],[-93,175,-88,-91,-92,-100,-101,-102,-103,-104,-93,-103,-94,-89,-90,-131,-95,-99,-105,-131,-98,]),'DIV':([125,130,131,134,135,136,137,138,139,140,141,148,159,178,216,229,242,243,250,262,268,],[-93,176,-88,-91,-92,-100,-101,-102,-103,-104,-93,-103,-94,-89,-90,-131,-95,-99,-105,-131,-98,]),'RESD':([125,130,131,134,135,136,137,138,139,140,141,148,159,178,216,229,242,243,250,262,268,],[-93,177,-88,-91,-92,-100,-101,-102,-103,-104,-93,-103,-94,-89,-90,-131,-95,-99,-105,-131,-98,]),'SUMA':([125,127,128,129,130,131,134,135,136,137,138,139,140,141,147,148,159,165,172,178,203,204,205,206,207,208,209,210,211,212,213,214,215,216,229,242,243,250,262,268,],[-93,-70,-131,173,-84,-88,-91,-92,-100,-101,-102,-103,-104,-93,184,185,-94,-73,-80,-89,-71,-72,-74,-75,-76,-77,-78,-79,-82,-83,-85,-86,-87,-90,-131,-95,-99,-105,-131,-98,]),'SUB':([125,129,130,131,134,135,136,137,138,139,140,141,148,159,178,213,214,215,216,229,242,243,250,262,268,],[-93,174,-84,-88,-91,-92,-100,-101,-102,-103,-104,-93,-103,-94,-89,-85,-86,-87,-90,-131,-95,-99,-105,-131,-98,]),'LESST':([125,128,129,130,131,134,135,136,137,138,139,140,141,148,159,178,211,212,213,214,215,216,229,242,243,250,262,268,],[-93,166,-81,-84,-88,-91,-92,-100,-101,-102,-103,-104,-93,-103,-94,-89,-82,-83,-85,-86,-87,-90,-131,-95,-99,-105,-131,-98,]),'MORET':([125,128,129,130,131,134,135,136,137,138,139,140,141,148,159,178,211,212,213,214,215,216,229,242,243,250,262,268,],[-93,167,-81,-84,-88,-91,-92,-100,-101,-102,-103,-104,-93,-103,-94,-89,-82,-83,-85,-86,-87,-90,-131,-95,-99,-105,-131,-98,]),'LESSEQUAL':([125,128,129,130,131,134,135,136,137,138,139,140,141,148,159,178,211,212,213,214,215,216,229,242,243,250,262,268,],[-93,168,-81,-84,-88,-91,-92,-100,-101,-102,-103,-104,-93,-103,-94,-89,-82,-83,-85,-86,-87,-90,-131,-95,-99,-105,-131,-98,]),'MOREEQUAL':([125,128,129,130,131,134,135,136,137,138,139,140,141,148,159,178,211,212,213,214,215,216,229,242,243,250,262,268,],[-93,169,-81,-84,-88,-91,-92,-100,-101,-102,-103,-104,-93,-103,-94,-89,-82,-83,-85,-86,-87,-90,-131,-95,-99,-105,-131,-98,]),'EQUALTO':([125,128,129,130,131,134,135,136,137,138,139,140,141,148,159,178,211,212,213,214,215,216,229,242,243,250,262,268,],[-93,170,-81,-84,-88,-91,-92,-100,-101,-102,-103,-104,-93,-103,-94,-89,-82,-83,-85,-86,-87,-90,-131,-95,-99,-105,-131,-98,]),'NOTEQUALTO':([125,128,129,130,131,134,135,136,137,138,139,140,141,148,159,178,211,212,213,214,215,216,229,242,243,250,262,268,],[-93,171,-81,-84,-88,-91,-92,-100,-101,-102,-103,-104,-93,-103,-94,-89,-82,-83,-85,-86,-87,-90,-131,-95,-99,-105,-131,-98,]),'AND':([125,127,128,129,130,131,134,135,136,137,138,139,140,141,148,159,165,172,178,205,206,207,208,209,210,211,212,213,214,215,216,229,242,243,250,262,268,],[-93,163,-131,-81,-84,-88,-91,-92,-100,-101,-102,-103,-104,-93,-103,-94,-73,-80,-89,-74,-75,-76,-77,-78,-79,-82,-83,-85,-86,-87,-90,-131,-95,-99,-105,-131,-98,]),'OR':([125,127,128,129,130,131,134,135,136,137,138,139,140,141,148,159,165,172,178,205,206,207,208,209,210,211,212,213,214,215,216,229,242,243,250,262,268,],[-93,164,-131,-81,-84,-88,-91,-92,-100,-101,-102,-103,-104,-93,-103,-94,-73,-80,-89,-74,-75,-76,-77,-78,-79,-82,-83,-85,-86,-87,-90,-131,-95,-99,-105,-131,-98,]),'DOT':([125,141,],[160,160,]),'IN':([153,],[190,]),'DEG':([160,],[194,]),'SHORTPATH':([160,],[195,]),'DIAMETER':([160,],[196,]),'ADD':([160,],[197,]),'DELETE':([160,],[198,]),'ELSE':([244,],[255,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'np_var_a1':([3,],[4,]),'empty':([3,6,7,9,15,20,21,22,23,24,25,26,27,28,35,36,49,52,54,55,66,69,73,75,76,84,85,86,89,106,109,110,113,117,123,128,154,223,224,228,229,244,249,262,263,265,],[5,8,11,14,38,38,38,38,38,38,38,38,38,38,51,53,56,59,11,63,72,77,80,83,11,90,11,108,90,90,83,124,144,90,158,172,14,90,90,238,243,256,90,243,90,90,]),'np_var_a2':([6,],[7,]),'vars':([7,54,76,85,],[9,60,84,106,]),'function':([9,154,],[12,191,]),'function_t':([9,154,],[13,13,]),'t_number':([9,10,66,120,154,156,],[16,30,30,30,16,30,]),'t_string':([9,10,66,120,154,156,],[17,31,31,31,17,31,]),'t_bool':([9,10,66,120,154,156,],[18,32,32,32,18,32,]),'t_graph':([9,10,66,120,154,156,],[19,33,33,33,19,33,]),'type':([10,66,120,156,],[29,73,73,73,]),'body':([12,],[34,]),'np_var_1':([15,20,21,22,23,24,25,26,27,28,],[37,39,40,41,42,43,44,45,46,47,]),'vars_1':([29,67,],[48,74,]),'np_var_c1':([35,],[50,]),'np_var_b2':([36,],[52,]),'np_var_2':([49,],[55,]),'np_var_b3':([52,],[58,]),'vars_2':([55,],[61,]),'array_declare':([55,107,],[62,121,]),'function_v':([66,],[70,]),'function_v1':([66,120,156,],[71,155,192,]),'np_var_c2':([69,],[76,]),'np_var_b4':([73,],[79,]),'array_declare_1':([75,109,],[82,122,]),'statutes':([84,89,106,117,223,224,249,263,265,],[88,111,119,152,230,231,259,269,270,]),'statutes_1':([84,89,106,117,223,224,249,263,265,],[89,89,89,89,89,89,89,89,89,]),'assignation':([84,89,106,117,223,224,233,249,263,265,],[91,91,91,91,91,91,248,91,91,91,]),'writing':([84,89,106,117,223,224,249,263,265,],[92,92,92,92,92,92,92,92,92,]),'condition':([84,89,106,117,223,224,249,263,265,],[93,93,93,93,93,93,93,93,93,]),'cycle':([84,89,106,117,223,224,249,263,265,],[94,94,94,94,94,94,94,94,94,]),'function_call':([84,89,106,117,223,224,249,263,265,],[95,95,95,95,95,95,95,95,95,]),'c_while':([84,89,106,117,223,224,249,263,265,],[99,99,99,99,99,99,99,99,99,]),'c_do':([84,89,106,117,223,224,249,263,265,],[100,100,100,100,100,100,100,100,100,]),'c_for':([84,89,106,117,223,224,249,263,265,],[101,101,101,101,101,101,101,101,101,]),'c_forin':([84,89,106,117,223,224,249,263,265,],[102,102,102,102,102,102,102,102,102,]),'np_var_b5':([86,],[107,]),'debug':([110,],[123,]),'expression':([112,113,114,115,116,133,163,164,180,182,184,185,189,232,],[126,145,147,150,151,179,203,204,145,145,147,147,226,246,]),'exp_lv1':([112,113,114,115,116,133,163,164,180,182,184,185,189,232,],[127,127,127,127,127,127,127,127,127,127,127,127,127,127,]),'exp_lv2':([112,113,114,115,116,133,163,164,166,167,168,169,170,171,173,174,180,182,184,185,189,232,],[128,128,128,128,128,128,128,128,205,206,207,208,209,210,211,212,128,128,128,128,128,128,]),'exp_lv3':([112,113,114,115,116,133,163,164,166,167,168,169,170,171,173,174,175,176,177,180,182,184,185,189,232,],[129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,213,214,215,129,129,129,129,129,129,]),'exp_lv4':([112,113,114,115,116,133,163,164,166,167,168,169,170,171,173,174,175,176,177,180,182,184,185,189,232,],[130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,]),'exp_lv5':([112,113,114,115,116,132,133,163,164,166,167,168,169,170,171,173,174,175,176,177,180,182,184,185,189,232,],[131,131,131,131,131,178,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,]),'var_cte':([112,113,114,115,116,132,133,163,164,166,167,168,169,170,171,173,174,175,176,177,180,182,184,185,189,232,],[134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,]),'method':([112,113,114,115,116,132,133,163,164,166,167,168,169,170,171,173,174,175,176,177,180,182,184,185,189,232,],[135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,]),'function_call_1':([113,],[142,]),'function_call_2':([113,180,182,],[143,217,219,]),'writing_1':([114,184,185,],[146,221,222,]),'writing_2':([114,184,185,],[149,149,149,]),'np_var_c3':([123,],[157,]),'array_access':([125,141,],[159,159,]),'exp_lv1_1':([128,],[165,]),'method_t':([160,],[193,]),'arrary_access_1':([161,241,],[200,253,]),'method_1':([228,],[236,]),'method_1_1':([228,251,],[237,260,]),'method_v':([228,251,],[239,239,]),'arrary_access_2':([229,262,],[242,268,]),'condition_1':([244,],[254,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID np_var_a1 SCOLO np_var_a2 vars function body','program',8,'p_program','yacc_c.py',144),
  ('vars -> VAR type vars_1 SCOLO vars','vars',5,'p_vars','yacc_c.py',148),
  ('vars -> empty','vars',1,'p_vars','yacc_c.py',149),
  ('vars_1 -> ID np_var_2 vars_2','vars_1',3,'p_vars_1','yacc_c.py',156),
  ('vars_1 -> ID np_var_2 vars_2 COMA vars_1','vars_1',5,'p_vars_1','yacc_c.py',157),
  ('vars_2 -> array_declare','vars_2',1,'p_vars_2','yacc_c.py',164),
  ('vars_2 -> empty','vars_2',1,'p_vars_2','yacc_c.py',165),
  ('function -> function_t ID np_var_b2 np_var_b3 LPAREN function_v RPAREN LBRACK vars statutes RBRACK function','function',12,'p_function','yacc_c.py',169),
  ('function -> empty','function',1,'p_function','yacc_c.py',170),
  ('function_t -> VOID np_var_1','function_t',2,'p_function_t','yacc_c.py',174),
  ('function_t -> t_number','function_t',1,'p_function_t','yacc_c.py',175),
  ('function_t -> t_string','function_t',1,'p_function_t','yacc_c.py',176),
  ('function_t -> t_bool','function_t',1,'p_function_t','yacc_c.py',177),
  ('function_t -> t_graph','function_t',1,'p_function_t','yacc_c.py',178),
  ('function_v -> function_v1','function_v',1,'p_function_v','yacc_c.py',181),
  ('function_v -> empty','function_v',1,'p_function_v','yacc_c.py',182),
  ('function_v1 -> type np_var_b4 ID np_var_b5','function_v1',4,'p_function_v1','yacc_c.py',185),
  ('function_v1 -> type np_var_b4 ID np_var_b5 COMA function_v1','function_v1',6,'p_function_v1','yacc_c.py',186),
  ('function_v1 -> type np_var_b4 ID np_var_b5 array_declare','function_v1',5,'p_function_v1','yacc_c.py',187),
  ('function_v1 -> type np_var_b4 ID np_var_b5 array_declare COMA function_v1','function_v1',7,'p_function_v1','yacc_c.py',188),
  ('body -> MAIN np_var_c1 LPAREN RPAREN LBRACK np_var_c2 vars statutes RBRACK debug np_var_c3','body',11,'p_body','yacc_c.py',191),
  ('type -> t_number','type',1,'p_type','yacc_c.py',194),
  ('type -> t_string','type',1,'p_type','yacc_c.py',195),
  ('type -> t_bool','type',1,'p_type','yacc_c.py',196),
  ('type -> t_graph','type',1,'p_type','yacc_c.py',197),
  ('t_number -> INT np_var_1','t_number',2,'p_t_number','yacc_c.py',200),
  ('t_number -> FLOAT np_var_1','t_number',2,'p_t_number','yacc_c.py',201),
  ('t_string -> STRING np_var_1','t_string',2,'p_t_string','yacc_c.py',204),
  ('t_string -> CHAR np_var_1','t_string',2,'p_t_string','yacc_c.py',205),
  ('t_bool -> BOOL np_var_1','t_bool',2,'p_t_bool','yacc_c.py',208),
  ('t_graph -> NODE np_var_1','t_graph',2,'p_t_graph','yacc_c.py',211),
  ('t_graph -> ARC np_var_1','t_graph',2,'p_t_graph','yacc_c.py',212),
  ('t_graph -> UNDIRECTED np_var_1','t_graph',2,'p_t_graph','yacc_c.py',213),
  ('t_graph -> DIRECTED np_var_1','t_graph',2,'p_t_graph','yacc_c.py',214),
  ('array_declare -> LCORCH CTE_INT RCORCH array_declare_1','array_declare',4,'p_array_declare','yacc_c.py',217),
  ('array_declare_1 -> LCORCH CTE_INT RCORCH array_declare_1','array_declare_1',4,'p_array_declare_1','yacc_c.py',220),
  ('array_declare_1 -> empty','array_declare_1',1,'p_array_declare_1','yacc_c.py',221),
  ('statutes -> statutes_1 statutes','statutes',2,'p_statutes','yacc_c.py',224),
  ('statutes -> empty','statutes',1,'p_statutes','yacc_c.py',225),
  ('statutes_1 -> assignation','statutes_1',1,'p_statutes_1','yacc_c.py',228),
  ('statutes_1 -> writing','statutes_1',1,'p_statutes_1','yacc_c.py',229),
  ('statutes_1 -> condition','statutes_1',1,'p_statutes_1','yacc_c.py',230),
  ('statutes_1 -> cycle','statutes_1',1,'p_statutes_1','yacc_c.py',231),
  ('statutes_1 -> function_call','statutes_1',1,'p_statutes_1','yacc_c.py',232),
  ('assignation -> ID EQL expression SCOLO','assignation',4,'p_assignation','yacc_c.py',235),
  ('writing -> PRINT LPAREN writing_1 RPAREN SCOLO','writing',5,'p_writing','yacc_c.py',238),
  ('writing_1 -> expression','writing_1',1,'p_writing_1','yacc_c.py',241),
  ('writing_1 -> CTE_STRING','writing_1',1,'p_writing_1','yacc_c.py',242),
  ('writing_1 -> writing_2','writing_1',1,'p_writing_1','yacc_c.py',243),
  ('writing_2 -> expression SUMA writing_1','writing_2',3,'p_writing_2','yacc_c.py',247),
  ('writing_2 -> CTE_STRING SUMA writing_1','writing_2',3,'p_writing_2','yacc_c.py',248),
  ('condition -> IF LPAREN expression RPAREN LBRACK statutes RBRACK condition_1','condition',8,'p_condition','yacc_c.py',251),
  ('condition_1 -> ELSE LBRACK statutes RBRACK','condition_1',4,'p_condition_1','yacc_c.py',254),
  ('condition_1 -> empty','condition_1',1,'p_condition_1','yacc_c.py',255),
  ('cycle -> c_while','cycle',1,'p_cycle','yacc_c.py',258),
  ('cycle -> c_do','cycle',1,'p_cycle','yacc_c.py',259),
  ('cycle -> c_for','cycle',1,'p_cycle','yacc_c.py',260),
  ('cycle -> c_forin','cycle',1,'p_cycle','yacc_c.py',261),
  ('c_while -> WHILE LPAREN expression RPAREN LBRACK statutes RBRACK','c_while',7,'p_c_while','yacc_c.py',264),
  ('c_do -> DO LBRACK statutes RBRACK WHILE LPAREN expression RPAREN SCOLO','c_do',9,'p_c_do','yacc_c.py',267),
  ('c_for -> FOR LPAREN ID SCOLO expression SCOLO assignation RPAREN LBRACK statutes RBRACK','c_for',11,'p_c_for','yacc_c.py',270),
  ('c_forin -> FOR LPAREN ID IN ID RPAREN LBRACK statutes RBRACK','c_forin',9,'p_c_forin','yacc_c.py',273),
  ('function_call -> ID LPAREN function_call_1 RPAREN SCOLO','function_call',5,'p_function_call','yacc_c.py',276),
  ('function_call_1 -> function_call_2','function_call_1',1,'p_function_call_1','yacc_c.py',279),
  ('function_call_1 -> empty','function_call_1',1,'p_function_call_1','yacc_c.py',280),
  ('function_call_2 -> expression','function_call_2',1,'p_function_call_2','yacc_c.py',283),
  ('function_call_2 -> ID','function_call_2',1,'p_function_call_2','yacc_c.py',284),
  ('function_call_2 -> expression SCOLO function_call_2','function_call_2',3,'p_function_call_2','yacc_c.py',285),
  ('function_call_2 -> ID SCOLO function_call_2','function_call_2',3,'p_function_call_2','yacc_c.py',286),
  ('expression -> exp_lv1','expression',1,'p_expression','yacc_c.py',290),
  ('expression -> exp_lv1 AND expression','expression',3,'p_expression','yacc_c.py',291),
  ('expression -> exp_lv1 OR expression','expression',3,'p_expression','yacc_c.py',292),
  ('exp_lv1 -> exp_lv2 exp_lv1_1','exp_lv1',2,'p_exp_lv1','yacc_c.py',295),
  ('exp_lv1_1 -> LESST exp_lv2','exp_lv1_1',2,'p_exp_lv1_1','yacc_c.py',297),
  ('exp_lv1_1 -> MORET exp_lv2','exp_lv1_1',2,'p_exp_lv1_1','yacc_c.py',298),
  ('exp_lv1_1 -> LESSEQUAL exp_lv2','exp_lv1_1',2,'p_exp_lv1_1','yacc_c.py',299),
  ('exp_lv1_1 -> MOREEQUAL exp_lv2','exp_lv1_1',2,'p_exp_lv1_1','yacc_c.py',300),
  ('exp_lv1_1 -> EQUALTO exp_lv2','exp_lv1_1',2,'p_exp_lv1_1','yacc_c.py',301),
  ('exp_lv1_1 -> NOTEQUALTO exp_lv2','exp_lv1_1',2,'p_exp_lv1_1','yacc_c.py',302),
  ('exp_lv1_1 -> empty','exp_lv1_1',1,'p_exp_lv1_1','yacc_c.py',303),
  ('exp_lv2 -> exp_lv3','exp_lv2',1,'p_exp_lv2','yacc_c.py',306),
  ('exp_lv2 -> exp_lv3 SUMA exp_lv2','exp_lv2',3,'p_exp_lv2','yacc_c.py',307),
  ('exp_lv2 -> exp_lv3 SUB exp_lv2','exp_lv2',3,'p_exp_lv2','yacc_c.py',308),
  ('exp_lv3 -> exp_lv4','exp_lv3',1,'p_exp_lv3','yacc_c.py',311),
  ('exp_lv3 -> exp_lv4 MUL exp_lv3','exp_lv3',3,'p_exp_lv3','yacc_c.py',312),
  ('exp_lv3 -> exp_lv4 DIV exp_lv3','exp_lv3',3,'p_exp_lv3','yacc_c.py',313),
  ('exp_lv3 -> exp_lv4 RESD exp_lv3','exp_lv3',3,'p_exp_lv3','yacc_c.py',314),
  ('exp_lv4 -> exp_lv5','exp_lv4',1,'p_exp_lv4','yacc_c.py',317),
  ('exp_lv4 -> NOT exp_lv5','exp_lv4',2,'p_exp_lv4','yacc_c.py',318),
  ('exp_lv5 -> RPAREN expression LPAREN','exp_lv5',3,'p_exp_lv5','yacc_c.py',321),
  ('exp_lv5 -> var_cte','exp_lv5',1,'p_exp_lv5','yacc_c.py',322),
  ('exp_lv5 -> method','exp_lv5',1,'p_exp_lv5','yacc_c.py',323),
  ('exp_lv5 -> ID','exp_lv5',1,'p_exp_lv5','yacc_c.py',324),
  ('exp_lv5 -> ID array_access','exp_lv5',2,'p_exp_lv5','yacc_c.py',325),
  ('array_access -> LCORCH arrary_access_1 RCORCH arrary_access_2','array_access',4,'p_array_access','yacc_c.py',329),
  ('arrary_access_1 -> CTE_INT','arrary_access_1',1,'p_array_access_1','yacc_c.py',332),
  ('arrary_access_1 -> ID','arrary_access_1',1,'p_array_access_1','yacc_c.py',333),
  ('arrary_access_2 -> LCORCH arrary_access_1 RCORCH arrary_access_2','arrary_access_2',4,'p_array_access_2','yacc_c.py',336),
  ('arrary_access_2 -> empty','arrary_access_2',1,'p_array_access_2','yacc_c.py',337),
  ('var_cte -> CTE_INT','var_cte',1,'p_var_cte','yacc_c.py',340),
  ('var_cte -> CTE_FLO','var_cte',1,'p_var_cte','yacc_c.py',341),
  ('var_cte -> CTE_BOO','var_cte',1,'p_var_cte','yacc_c.py',342),
  ('var_cte -> CTE_STRING','var_cte',1,'p_var_cte','yacc_c.py',343),
  ('var_cte -> CTE_CHAR','var_cte',1,'p_var_cte','yacc_c.py',344),
  ('method -> ID DOT method_t LPAREN method_1 RPAREN','method',6,'p_method','yacc_c.py',350),
  ('method_1 -> method_1_1','method_1',1,'p_method_1','yacc_c.py',353),
  ('method_1 -> empty','method_1',1,'p_method_1','yacc_c.py',354),
  ('method_1_1 -> method_v','method_1_1',1,'p_method_1_1','yacc_c.py',357),
  ('method_1_1 -> method_v COMA method_1_1','method_1_1',3,'p_method_1_1','yacc_c.py',358),
  ('method_t -> DEG','method_t',1,'p_method_t','yacc_c.py',361),
  ('method_t -> SHORTPATH','method_t',1,'p_method_t','yacc_c.py',362),
  ('method_t -> DIAMETER','method_t',1,'p_method_t','yacc_c.py',363),
  ('method_t -> ADD','method_t',1,'p_method_t','yacc_c.py',364),
  ('method_t -> DELETE','method_t',1,'p_method_t','yacc_c.py',365),
  ('method_t -> ARC','method_t',1,'p_method_t','yacc_c.py',366),
  ('method_v -> ID','method_v',1,'p_method_v','yacc_c.py',369),
  ('method_v -> LBRACK ID COMA ID RBRACK','method_v',5,'p_method_v','yacc_c.py',370),
  ('np_var_a1 -> empty','np_var_a1',1,'p_np_var_a1','yacc_c.py',380),
  ('np_var_a2 -> empty','np_var_a2',1,'p_np_var_a2','yacc_c.py',389),
  ('np_var_b1 -> empty','np_var_b1',1,'p_np_var_b1','yacc_c.py',395),
  ('np_var_b2 -> empty','np_var_b2',1,'p_np_var_b2','yacc_c.py',400),
  ('np_var_b3 -> empty','np_var_b3',1,'p_np_var_b3','yacc_c.py',413),
  ('np_var_b4 -> empty','np_var_b4',1,'p_np_var_b4','yacc_c.py',418),
  ('np_var_b5 -> empty','np_var_b5',1,'p_np_var_b5','yacc_c.py',423),
  ('np_var_c1 -> empty','np_var_c1',1,'p_np_var_c1','yacc_c.py',439),
  ('np_var_c2 -> empty','np_var_c2',1,'p_np_var_c2','yacc_c.py',446),
  ('np_var_c3 -> empty','np_var_c3',1,'p_np_var_c3','yacc_c.py',451),
  ('np_var_1 -> empty','np_var_1',1,'p_np_var_1','yacc_c.py',457),
  ('np_var_2 -> empty','np_var_2',1,'p_np_var_2','yacc_c.py',462),
  ('debug -> empty','debug',1,'p_debug','yacc_c.py',477),
  ('empty -> <empty>','empty',0,'p_empty','yacc_c.py',490),
]
