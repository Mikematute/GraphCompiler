
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD AND ARC BOOL CHAR COLON COMA CTE_BOO CTE_CHAR CTE_FLO CTE_INT CTE_STRING DEG DELETE DIAMETER DIRECTED DIV DO DOT ELSE EQL EQUALTO FLOAT FOR ID IF IN INT LBRACK LCORCH LESSEQUAL LESST LPAREN MAIN MOREEQUAL MORET MUL NODE NOT NOTEQUALTO OR PRINT PROGRAM RBRACK RCORCH RESD RPAREN SCOLO SHORTPATH STRING SUB SUMA UNDIRECTED VAR VOID WHILEprogram : PROGRAM ID SCOLO vars function bodyvars : VAR type vars_1 SCOLO vars\n            | emptyvars_1 : ID\n              | ID COMA IDfunction : function_t ID LPAREN function_v RPAREN LBRACK vars statutes RBRACK function\n                | emptyfunction_t : VOID\n                  | t_number\n                  | t_string\n                  | t_bool\n                  | t_graphfunction_v : function_v1\n                  | emptyfunction_v1 : type ID COMA\n                   | type ID COMA function_v1body : MAIN LPAREN RPAREN LBRACK vars statutes RBRACKtype : t_number\n            | t_string\n            | t_bool\n            | t_graph\n            | t_arrayt_number : INT\n                | FLOATt_string : STRING\n                | CHARt_bool : BOOLt_graph : NODE\n               | ARC\n               | UNDIRECTED\n               | DIRECTEDt_array : t_array_1 LCORCH CTE_INT RCORCH t_array_2t_array_1 : t_number\n                 | t_string\n                 | t_bool\n                 | t_grapht_array_2 : LCORCH CTE_INT RCORCH t_array_2\n                 | emptystatutes : statutes_1 statutes\n                | emptystatutes_1 : assignation\n                  | writing\n                  | condition\n                  | cycle\n                  | function_callassignation : ID EQL expressionwriting : PRINT LPAREN writing_1 RPAREN SCOLOwriting_1 : expression\n                 | CTE_STRING\n                 | writing_2writing_2 : expression SUMA writing_1\n                 | CTE_STRING SUMA writing_1condition : IF LPAREN expression RPAREN LBRACK statutes RBRACK condition_1 SCOLOcondition_1 : ELSE LBRACK expression RBRACK\n                   | emptycycle : c_while\n             | c_do\n             | c_for\n             | c_forinc_while : WHILE LPAREN expression RPAREN LBRACK statutes RBRACKc_do : DO LBRACK statutes RBRACK WHILE LPAREN expression RPARENc_for : FOR LPAREN ID SCOLO expression SCOLO assignation RPAREN LBRACK statutes RBRACKc_forin : FOR LPAREN ID IN ID RPAREN LBRACK statutes RBRACKfunction_call : ID LPAREN function_call_1 RPAREN SCOLOfunction_call_1 : function_call_2\n                       | emptyfunction_call_2 : expression\n                       | ID\n                       | expression SCOLO function_call_2\n                       | ID SCOLO function_call_2expression : exp_lv1\n                  | exp_lv1 AND expression\n                  | exp_lv1 OR expressionexp_lv1 : exp_lv2 exp_lv1_1exp_lv1_1 : LESST exp_lv2\n                 | MORET exp_lv2\n                 | LESSEQUAL exp_lv2\n                 | MOREEQUAL exp_lv2\n                 | EQUALTO exp_lv2\n                 | NOTEQUALTO exp_lv2\n                 | emptyexp_lv2 : exp_lv3\n               | exp_lv3 SUMA exp_lv2\n               | exp_lv3 SUB exp_lv2exp_lv3 : exp_lv4\n               | exp_lv4 MUL exp_lv3\n               | exp_lv4 DIV exp_lv3\n               | exp_lv4 RESD exp_lv3exp_lv4 : exp_lv5\n               | NOT exp_lv5exp_lv5 : RPAREN expression LPAREN\n               | var_cte\n               | method\n               | IDvar_cte : CTE_INT\n               | CTE_FLO\n               | CTE_BOO\n               | CTE_STRING\n               | CTE_CHARmethod : ID DOT method_t LPAREN method_1 RPARENmethod_1 : method_1_1\n                | emptymethod_1_1 : method_v\n                  | method_v COMA method_1_1method_t : DEG\n                | SHORTPATH\n                | DIAMETER\n                | ADD\n                | DELETE\n                | ARCmethod_v : ID\n                | LBRACK ID COMA ID RBRACKempty :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,32,82,],[0,-1,-17,]),'ID':([2,7,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,40,41,47,48,50,51,55,56,57,58,62,64,65,66,67,68,72,73,74,75,79,81,84,85,86,87,88,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,141,143,145,146,150,151,160,161,162,163,164,165,166,167,168,169,170,171,172,173,175,177,180,181,185,188,189,196,198,202,203,204,209,213,214,215,216,217,223,],[3,-3,34,-8,-9,-10,-11,-12,-23,-24,-25,-26,-27,-28,-29,-30,-31,36,-18,-19,-20,-21,-22,-113,49,53,-2,-113,-113,-32,-38,69,-113,69,-41,-42,-43,-44,-45,-56,-57,-58,-59,69,-113,93,109,93,93,93,69,121,-37,-94,-46,-71,-113,-82,-85,-89,93,93,-92,-93,-95,-96,-97,-98,-99,93,93,-74,93,93,93,93,93,93,-81,93,93,93,93,93,-90,109,109,93,93,93,184,-72,-73,-75,-76,-77,-78,-79,-80,-83,-84,-86,-87,-88,-91,-64,-47,69,69,191,93,200,205,-60,69,-100,191,-61,218,-53,93,69,-63,-62,]),'SCOLO':([3,35,36,49,93,95,96,97,98,99,102,103,104,105,106,107,108,109,113,121,126,133,139,142,144,160,161,162,163,164,165,166,167,168,169,170,171,172,173,183,197,203,206,208,222,],[4,40,-4,-5,-94,-71,-113,-82,-85,-89,-92,-93,-95,-96,-97,-98,-99,141,143,150,-74,-81,-90,175,177,-72,-73,-75,-76,-77,-78,-79,-80,-83,-84,-86,-87,-88,-91,189,-113,-100,214,-55,-54,]),'VAR':([4,40,51,58,],[6,6,6,6,]),'VOID':([4,5,7,40,48,122,],[-113,11,-3,-113,-2,11,]),'INT':([4,5,6,7,39,40,48,59,122,],[-113,16,16,-3,16,-113,-2,16,16,]),'FLOAT':([4,5,6,7,39,40,48,59,122,],[-113,17,17,-3,17,-113,-2,17,17,]),'STRING':([4,5,6,7,39,40,48,59,122,],[-113,18,18,-3,18,-113,-2,18,18,]),'CHAR':([4,5,6,7,39,40,48,59,122,],[-113,19,19,-3,19,-113,-2,19,19,]),'BOOL':([4,5,6,7,39,40,48,59,122,],[-113,20,20,-3,20,-113,-2,20,20,]),'NODE':([4,5,6,7,39,40,48,59,122,],[-113,21,21,-3,21,-113,-2,21,21,]),'ARC':([4,5,6,7,39,40,48,59,122,123,],[-113,22,22,-3,22,-113,-2,22,22,159,]),'UNDIRECTED':([4,5,6,7,39,40,48,59,122,],[-113,23,23,-3,23,-113,-2,23,23,]),'DIRECTED':([4,5,6,7,39,40,48,59,122,],[-113,24,24,-3,24,-113,-2,24,24,]),'MAIN':([4,5,7,8,10,40,48,122,152,],[-113,-113,-3,33,-7,-113,-2,-113,-6,]),'PRINT':([7,40,48,51,57,58,62,64,65,66,67,68,72,73,74,75,79,89,93,94,95,96,97,98,99,102,103,104,105,106,107,108,126,133,139,160,161,162,163,164,165,166,167,168,169,170,171,172,173,175,177,180,181,198,202,203,209,214,216,217,223,],[-3,-113,-2,-113,70,-113,70,-41,-42,-43,-44,-45,-56,-57,-58,-59,70,70,-94,-46,-71,-113,-82,-85,-89,-92,-93,-95,-96,-97,-98,-99,-74,-81,-90,-72,-73,-75,-76,-77,-78,-79,-80,-83,-84,-86,-87,-88,-91,-64,-47,70,70,-60,70,-100,-61,-53,70,-63,-62,]),'IF':([7,40,48,51,57,58,62,64,65,66,67,68,72,73,74,75,79,89,93,94,95,96,97,98,99,102,103,104,105,106,107,108,126,133,139,160,161,162,163,164,165,166,167,168,169,170,171,172,173,175,177,180,181,198,202,203,209,214,216,217,223,],[-3,-113,-2,-113,71,-113,71,-41,-42,-43,-44,-45,-56,-57,-58,-59,71,71,-94,-46,-71,-113,-82,-85,-89,-92,-93,-95,-96,-97,-98,-99,-74,-81,-90,-72,-73,-75,-76,-77,-78,-79,-80,-83,-84,-86,-87,-88,-91,-64,-47,71,71,-60,71,-100,-61,-53,71,-63,-62,]),'WHILE':([7,40,48,51,57,58,62,64,65,66,67,68,72,73,74,75,79,89,93,94,95,96,97,98,99,102,103,104,105,106,107,108,126,133,139,149,160,161,162,163,164,165,166,167,168,169,170,171,172,173,175,177,180,181,198,202,203,209,214,216,217,223,],[-3,-113,-2,-113,76,-113,76,-41,-42,-43,-44,-45,-56,-57,-58,-59,76,76,-94,-46,-71,-113,-82,-85,-89,-92,-93,-95,-96,-97,-98,-99,-74,-81,-90,182,-72,-73,-75,-76,-77,-78,-79,-80,-83,-84,-86,-87,-88,-91,-64,-47,76,76,-60,76,-100,-61,-53,76,-63,-62,]),'DO':([7,40,48,51,57,58,62,64,65,66,67,68,72,73,74,75,79,89,93,94,95,96,97,98,99,102,103,104,105,106,107,108,126,133,139,160,161,162,163,164,165,166,167,168,169,170,171,172,173,175,177,180,181,198,202,203,209,214,216,217,223,],[-3,-113,-2,-113,77,-113,77,-41,-42,-43,-44,-45,-56,-57,-58,-59,77,77,-94,-46,-71,-113,-82,-85,-89,-92,-93,-95,-96,-97,-98,-99,-74,-81,-90,-72,-73,-75,-76,-77,-78,-79,-80,-83,-84,-86,-87,-88,-91,-64,-47,77,77,-60,77,-100,-61,-53,77,-63,-62,]),'FOR':([7,40,48,51,57,58,62,64,65,66,67,68,72,73,74,75,79,89,93,94,95,96,97,98,99,102,103,104,105,106,107,108,126,133,139,160,161,162,163,164,165,166,167,168,169,170,171,172,173,175,177,180,181,198,202,203,209,214,216,217,223,],[-3,-113,-2,-113,78,-113,78,-41,-42,-43,-44,-45,-56,-57,-58,-59,78,78,-94,-46,-71,-113,-82,-85,-89,-92,-93,-95,-96,-97,-98,-99,-74,-81,-90,-72,-73,-75,-76,-77,-78,-79,-80,-83,-84,-86,-87,-88,-91,-64,-47,78,78,-60,78,-100,-61,-53,78,-63,-62,]),'RBRACK':([7,40,48,51,57,58,61,62,63,64,65,66,67,68,72,73,74,75,79,83,89,91,93,94,95,96,97,98,99,102,103,104,105,106,107,108,120,126,133,139,160,161,162,163,164,165,166,167,168,169,170,171,172,173,175,177,180,181,186,187,198,202,203,209,211,214,216,217,218,219,220,223,],[-3,-113,-2,-113,-113,-113,82,-113,-40,-41,-42,-43,-44,-45,-56,-57,-58,-59,-113,-39,-113,122,-94,-46,-71,-113,-82,-85,-89,-92,-93,-95,-96,-97,-98,-99,149,-74,-81,-90,-72,-73,-75,-76,-77,-78,-79,-80,-83,-84,-86,-87,-88,-91,-64,-47,-113,-113,197,198,-60,-113,-100,-61,217,-53,-113,-63,221,222,223,-62,]),'LCORCH':([16,17,18,19,20,21,22,23,24,26,27,28,29,31,50,81,],[-23,-24,-25,-26,-27,-28,-29,-30,-31,-33,-34,-35,-36,37,54,54,]),'LPAREN':([33,34,69,70,71,76,78,93,95,96,97,98,99,102,103,104,105,106,107,108,126,133,139,140,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,182,203,],[38,39,85,86,87,88,90,-94,-71,-113,-82,-85,-89,-92,-93,-95,-96,-97,-98,-99,-74,-81,-90,173,185,-105,-106,-107,-108,-109,-110,-72,-73,-75,-76,-77,-78,-79,-80,-83,-84,-86,-87,-88,-91,188,-100,]),'COMA':([36,53,191,195,205,221,],[41,59,-111,204,213,-112,]),'CTE_INT':([37,54,84,85,86,87,88,100,101,124,125,127,128,129,130,131,132,134,135,136,137,138,141,143,145,146,150,188,215,],[42,60,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'RPAREN':([38,39,44,45,46,59,80,84,85,86,87,88,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,141,143,145,146,150,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,176,178,179,184,185,188,191,192,193,194,195,199,201,203,212,215,221,],[43,-113,52,-13,-14,-15,-16,101,101,101,101,101,-94,-46,-71,-113,-82,-85,-89,101,101,-92,-93,-95,-96,-97,-98,-99,-68,142,-65,-66,-67,144,-48,-49,-50,147,148,101,101,-74,101,101,101,101,101,101,-81,101,101,101,101,101,-90,101,101,101,101,101,-72,-73,-75,-76,-77,-78,-79,-80,-83,-84,-86,-87,-88,-91,-70,-69,-51,-52,190,-113,101,-111,203,-101,-102,-103,209,210,-100,-104,101,-112,]),'RCORCH':([42,60,],[50,81,]),'LBRACK':([43,52,77,147,148,185,190,204,207,210,],[51,58,89,180,181,196,202,196,215,216,]),'EQL':([69,200,],[84,84,]),'NOT':([84,85,86,87,88,101,124,125,127,128,129,130,131,132,134,135,136,137,138,141,143,145,146,150,188,215,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'CTE_FLO':([84,85,86,87,88,100,101,124,125,127,128,129,130,131,132,134,135,136,137,138,141,143,145,146,150,188,215,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'CTE_BOO':([84,85,86,87,88,100,101,124,125,127,128,129,130,131,132,134,135,136,137,138,141,143,145,146,150,188,215,],[106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'CTE_STRING':([84,85,86,87,88,100,101,124,125,127,128,129,130,131,132,134,135,136,137,138,141,143,145,146,150,188,215,],[107,107,116,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,116,116,107,107,107,]),'CTE_CHAR':([84,85,86,87,88,100,101,124,125,127,128,129,130,131,132,134,135,136,137,138,141,143,145,146,150,188,215,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'MUL':([93,98,99,102,103,104,105,106,107,108,109,116,139,173,203,],[-94,136,-89,-92,-93,-95,-96,-97,-98,-99,-94,-98,-90,-91,-100,]),'DIV':([93,98,99,102,103,104,105,106,107,108,109,116,139,173,203,],[-94,137,-89,-92,-93,-95,-96,-97,-98,-99,-94,-98,-90,-91,-100,]),'RESD':([93,98,99,102,103,104,105,106,107,108,109,116,139,173,203,],[-94,138,-89,-92,-93,-95,-96,-97,-98,-99,-94,-98,-90,-91,-100,]),'SUMA':([93,95,96,97,98,99,102,103,104,105,106,107,108,109,115,116,126,133,139,160,161,162,163,164,165,166,167,168,169,170,171,172,173,203,],[-94,-71,-113,134,-85,-89,-92,-93,-95,-96,-97,-98,-99,-94,145,146,-74,-81,-90,-72,-73,-75,-76,-77,-78,-79,-80,-83,-84,-86,-87,-88,-91,-100,]),'SUB':([93,97,98,99,102,103,104,105,106,107,108,109,116,139,170,171,172,173,203,],[-94,135,-85,-89,-92,-93,-95,-96,-97,-98,-99,-94,-98,-90,-86,-87,-88,-91,-100,]),'LESST':([93,96,97,98,99,102,103,104,105,106,107,108,109,116,139,168,169,170,171,172,173,203,],[-94,127,-82,-85,-89,-92,-93,-95,-96,-97,-98,-99,-94,-98,-90,-83,-84,-86,-87,-88,-91,-100,]),'MORET':([93,96,97,98,99,102,103,104,105,106,107,108,109,116,139,168,169,170,171,172,173,203,],[-94,128,-82,-85,-89,-92,-93,-95,-96,-97,-98,-99,-94,-98,-90,-83,-84,-86,-87,-88,-91,-100,]),'LESSEQUAL':([93,96,97,98,99,102,103,104,105,106,107,108,109,116,139,168,169,170,171,172,173,203,],[-94,129,-82,-85,-89,-92,-93,-95,-96,-97,-98,-99,-94,-98,-90,-83,-84,-86,-87,-88,-91,-100,]),'MOREEQUAL':([93,96,97,98,99,102,103,104,105,106,107,108,109,116,139,168,169,170,171,172,173,203,],[-94,130,-82,-85,-89,-92,-93,-95,-96,-97,-98,-99,-94,-98,-90,-83,-84,-86,-87,-88,-91,-100,]),'EQUALTO':([93,96,97,98,99,102,103,104,105,106,107,108,109,116,139,168,169,170,171,172,173,203,],[-94,131,-82,-85,-89,-92,-93,-95,-96,-97,-98,-99,-94,-98,-90,-83,-84,-86,-87,-88,-91,-100,]),'NOTEQUALTO':([93,96,97,98,99,102,103,104,105,106,107,108,109,116,139,168,169,170,171,172,173,203,],[-94,132,-82,-85,-89,-92,-93,-95,-96,-97,-98,-99,-94,-98,-90,-83,-84,-86,-87,-88,-91,-100,]),'AND':([93,95,96,97,98,99,102,103,104,105,106,107,108,109,116,126,133,139,162,163,164,165,166,167,168,169,170,171,172,173,203,],[-94,124,-113,-82,-85,-89,-92,-93,-95,-96,-97,-98,-99,-94,-98,-74,-81,-90,-75,-76,-77,-78,-79,-80,-83,-84,-86,-87,-88,-91,-100,]),'OR':([93,95,96,97,98,99,102,103,104,105,106,107,108,109,116,126,133,139,162,163,164,165,166,167,168,169,170,171,172,173,203,],[-94,125,-113,-82,-85,-89,-92,-93,-95,-96,-97,-98,-99,-94,-98,-74,-81,-90,-75,-76,-77,-78,-79,-80,-83,-84,-86,-87,-88,-91,-100,]),'DOT':([93,109,],[123,123,]),'IN':([121,],[151,]),'DEG':([123,],[154,]),'SHORTPATH':([123,],[155,]),'DIAMETER':([123,],[156,]),'ADD':([123,],[157,]),'DELETE':([123,],[158,]),'ELSE':([197,],[207,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'vars':([4,40,51,58,],[5,48,57,79,]),'empty':([4,5,39,40,50,51,57,58,62,79,81,85,89,96,122,180,181,185,197,202,216,],[7,10,46,7,56,7,63,7,63,63,56,112,63,133,10,63,63,194,208,63,63,]),'function':([5,122,],[8,152,]),'function_t':([5,122,],[9,9,]),'t_number':([5,6,39,59,122,],[12,26,26,26,12,]),'t_string':([5,6,39,59,122,],[13,27,27,27,13,]),'t_bool':([5,6,39,59,122,],[14,28,28,28,14,]),'t_graph':([5,6,39,59,122,],[15,29,29,29,15,]),'type':([6,39,59,],[25,47,47,]),'t_array':([6,39,59,],[30,30,30,]),'t_array_1':([6,39,59,],[31,31,31,]),'body':([8,],[32,]),'vars_1':([25,],[35,]),'function_v':([39,],[44,]),'function_v1':([39,59,],[45,80,]),'t_array_2':([50,81,],[55,92,]),'statutes':([57,62,79,89,180,181,202,216,],[61,83,91,120,186,187,211,220,]),'statutes_1':([57,62,79,89,180,181,202,216,],[62,62,62,62,62,62,62,62,]),'assignation':([57,62,79,89,180,181,189,202,216,],[64,64,64,64,64,64,201,64,64,]),'writing':([57,62,79,89,180,181,202,216,],[65,65,65,65,65,65,65,65,]),'condition':([57,62,79,89,180,181,202,216,],[66,66,66,66,66,66,66,66,]),'cycle':([57,62,79,89,180,181,202,216,],[67,67,67,67,67,67,67,67,]),'function_call':([57,62,79,89,180,181,202,216,],[68,68,68,68,68,68,68,68,]),'c_while':([57,62,79,89,180,181,202,216,],[72,72,72,72,72,72,72,72,]),'c_do':([57,62,79,89,180,181,202,216,],[73,73,73,73,73,73,73,73,]),'c_for':([57,62,79,89,180,181,202,216,],[74,74,74,74,74,74,74,74,]),'c_forin':([57,62,79,89,180,181,202,216,],[75,75,75,75,75,75,75,75,]),'expression':([84,85,86,87,88,101,124,125,141,143,145,146,150,188,215,],[94,113,115,118,119,140,160,161,113,113,115,115,183,199,219,]),'exp_lv1':([84,85,86,87,88,101,124,125,141,143,145,146,150,188,215,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'exp_lv2':([84,85,86,87,88,101,124,125,127,128,129,130,131,132,134,135,141,143,145,146,150,188,215,],[96,96,96,96,96,96,96,96,162,163,164,165,166,167,168,169,96,96,96,96,96,96,96,]),'exp_lv3':([84,85,86,87,88,101,124,125,127,128,129,130,131,132,134,135,136,137,138,141,143,145,146,150,188,215,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,170,171,172,97,97,97,97,97,97,97,]),'exp_lv4':([84,85,86,87,88,101,124,125,127,128,129,130,131,132,134,135,136,137,138,141,143,145,146,150,188,215,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'exp_lv5':([84,85,86,87,88,100,101,124,125,127,128,129,130,131,132,134,135,136,137,138,141,143,145,146,150,188,215,],[99,99,99,99,99,139,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'var_cte':([84,85,86,87,88,100,101,124,125,127,128,129,130,131,132,134,135,136,137,138,141,143,145,146,150,188,215,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'method':([84,85,86,87,88,100,101,124,125,127,128,129,130,131,132,134,135,136,137,138,141,143,145,146,150,188,215,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'function_call_1':([85,],[110,]),'function_call_2':([85,141,143,],[111,174,176,]),'writing_1':([86,145,146,],[114,178,179,]),'writing_2':([86,145,146,],[117,117,117,]),'exp_lv1_1':([96,],[126,]),'method_t':([123,],[153,]),'method_1':([185,],[192,]),'method_1_1':([185,204,],[193,212,]),'method_v':([185,204,],[195,195,]),'condition_1':([197,],[206,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID SCOLO vars function body','program',6,'p_program','yacc_c.py',137),
  ('vars -> VAR type vars_1 SCOLO vars','vars',5,'p_vars','yacc_c.py',141),
  ('vars -> empty','vars',1,'p_vars','yacc_c.py',142),
  ('vars_1 -> ID','vars_1',1,'p_vars_1','yacc_c.py',149),
  ('vars_1 -> ID COMA ID','vars_1',3,'p_vars_1','yacc_c.py',150),
  ('function -> function_t ID LPAREN function_v RPAREN LBRACK vars statutes RBRACK function','function',10,'p_function','yacc_c.py',157),
  ('function -> empty','function',1,'p_function','yacc_c.py',158),
  ('function_t -> VOID','function_t',1,'p_function_t','yacc_c.py',162),
  ('function_t -> t_number','function_t',1,'p_function_t','yacc_c.py',163),
  ('function_t -> t_string','function_t',1,'p_function_t','yacc_c.py',164),
  ('function_t -> t_bool','function_t',1,'p_function_t','yacc_c.py',165),
  ('function_t -> t_graph','function_t',1,'p_function_t','yacc_c.py',166),
  ('function_v -> function_v1','function_v',1,'p_function_v','yacc_c.py',169),
  ('function_v -> empty','function_v',1,'p_function_v','yacc_c.py',170),
  ('function_v1 -> type ID COMA','function_v1',3,'p_function_v1','yacc_c.py',173),
  ('function_v1 -> type ID COMA function_v1','function_v1',4,'p_function_v1','yacc_c.py',174),
  ('body -> MAIN LPAREN RPAREN LBRACK vars statutes RBRACK','body',7,'p_body','yacc_c.py',177),
  ('type -> t_number','type',1,'p_type','yacc_c.py',180),
  ('type -> t_string','type',1,'p_type','yacc_c.py',181),
  ('type -> t_bool','type',1,'p_type','yacc_c.py',182),
  ('type -> t_graph','type',1,'p_type','yacc_c.py',183),
  ('type -> t_array','type',1,'p_type','yacc_c.py',184),
  ('t_number -> INT','t_number',1,'p_t_number','yacc_c.py',187),
  ('t_number -> FLOAT','t_number',1,'p_t_number','yacc_c.py',188),
  ('t_string -> STRING','t_string',1,'p_t_string','yacc_c.py',191),
  ('t_string -> CHAR','t_string',1,'p_t_string','yacc_c.py',192),
  ('t_bool -> BOOL','t_bool',1,'p_t_bool','yacc_c.py',195),
  ('t_graph -> NODE','t_graph',1,'p_t_graph','yacc_c.py',198),
  ('t_graph -> ARC','t_graph',1,'p_t_graph','yacc_c.py',199),
  ('t_graph -> UNDIRECTED','t_graph',1,'p_t_graph','yacc_c.py',200),
  ('t_graph -> DIRECTED','t_graph',1,'p_t_graph','yacc_c.py',201),
  ('t_array -> t_array_1 LCORCH CTE_INT RCORCH t_array_2','t_array',5,'p_t_array','yacc_c.py',204),
  ('t_array_1 -> t_number','t_array_1',1,'p_t_array_1','yacc_c.py',207),
  ('t_array_1 -> t_string','t_array_1',1,'p_t_array_1','yacc_c.py',208),
  ('t_array_1 -> t_bool','t_array_1',1,'p_t_array_1','yacc_c.py',209),
  ('t_array_1 -> t_graph','t_array_1',1,'p_t_array_1','yacc_c.py',210),
  ('t_array_2 -> LCORCH CTE_INT RCORCH t_array_2','t_array_2',4,'p_t_array_2','yacc_c.py',213),
  ('t_array_2 -> empty','t_array_2',1,'p_t_array_2','yacc_c.py',214),
  ('statutes -> statutes_1 statutes','statutes',2,'p_statutes','yacc_c.py',217),
  ('statutes -> empty','statutes',1,'p_statutes','yacc_c.py',218),
  ('statutes_1 -> assignation','statutes_1',1,'p_statutes_1','yacc_c.py',221),
  ('statutes_1 -> writing','statutes_1',1,'p_statutes_1','yacc_c.py',222),
  ('statutes_1 -> condition','statutes_1',1,'p_statutes_1','yacc_c.py',223),
  ('statutes_1 -> cycle','statutes_1',1,'p_statutes_1','yacc_c.py',224),
  ('statutes_1 -> function_call','statutes_1',1,'p_statutes_1','yacc_c.py',225),
  ('assignation -> ID EQL expression','assignation',3,'p_assignation','yacc_c.py',228),
  ('writing -> PRINT LPAREN writing_1 RPAREN SCOLO','writing',5,'p_writing','yacc_c.py',231),
  ('writing_1 -> expression','writing_1',1,'p_writing_1','yacc_c.py',234),
  ('writing_1 -> CTE_STRING','writing_1',1,'p_writing_1','yacc_c.py',235),
  ('writing_1 -> writing_2','writing_1',1,'p_writing_1','yacc_c.py',236),
  ('writing_2 -> expression SUMA writing_1','writing_2',3,'p_writing_2','yacc_c.py',239),
  ('writing_2 -> CTE_STRING SUMA writing_1','writing_2',3,'p_writing_2','yacc_c.py',240),
  ('condition -> IF LPAREN expression RPAREN LBRACK statutes RBRACK condition_1 SCOLO','condition',9,'p_condition','yacc_c.py',243),
  ('condition_1 -> ELSE LBRACK expression RBRACK','condition_1',4,'p_condition_1','yacc_c.py',246),
  ('condition_1 -> empty','condition_1',1,'p_condition_1','yacc_c.py',247),
  ('cycle -> c_while','cycle',1,'p_cycle','yacc_c.py',250),
  ('cycle -> c_do','cycle',1,'p_cycle','yacc_c.py',251),
  ('cycle -> c_for','cycle',1,'p_cycle','yacc_c.py',252),
  ('cycle -> c_forin','cycle',1,'p_cycle','yacc_c.py',253),
  ('c_while -> WHILE LPAREN expression RPAREN LBRACK statutes RBRACK','c_while',7,'p_c_while','yacc_c.py',256),
  ('c_do -> DO LBRACK statutes RBRACK WHILE LPAREN expression RPAREN','c_do',8,'p_c_do','yacc_c.py',259),
  ('c_for -> FOR LPAREN ID SCOLO expression SCOLO assignation RPAREN LBRACK statutes RBRACK','c_for',11,'p_c_for','yacc_c.py',262),
  ('c_forin -> FOR LPAREN ID IN ID RPAREN LBRACK statutes RBRACK','c_forin',9,'p_c_forin','yacc_c.py',265),
  ('function_call -> ID LPAREN function_call_1 RPAREN SCOLO','function_call',5,'p_function_call','yacc_c.py',268),
  ('function_call_1 -> function_call_2','function_call_1',1,'p_function_call_1','yacc_c.py',271),
  ('function_call_1 -> empty','function_call_1',1,'p_function_call_1','yacc_c.py',272),
  ('function_call_2 -> expression','function_call_2',1,'p_function_call_2','yacc_c.py',275),
  ('function_call_2 -> ID','function_call_2',1,'p_function_call_2','yacc_c.py',276),
  ('function_call_2 -> expression SCOLO function_call_2','function_call_2',3,'p_function_call_2','yacc_c.py',277),
  ('function_call_2 -> ID SCOLO function_call_2','function_call_2',3,'p_function_call_2','yacc_c.py',278),
  ('expression -> exp_lv1','expression',1,'p_expression','yacc_c.py',282),
  ('expression -> exp_lv1 AND expression','expression',3,'p_expression','yacc_c.py',283),
  ('expression -> exp_lv1 OR expression','expression',3,'p_expression','yacc_c.py',284),
  ('exp_lv1 -> exp_lv2 exp_lv1_1','exp_lv1',2,'p_exp_lv1','yacc_c.py',287),
  ('exp_lv1_1 -> LESST exp_lv2','exp_lv1_1',2,'p_exp_lv1_1','yacc_c.py',289),
  ('exp_lv1_1 -> MORET exp_lv2','exp_lv1_1',2,'p_exp_lv1_1','yacc_c.py',290),
  ('exp_lv1_1 -> LESSEQUAL exp_lv2','exp_lv1_1',2,'p_exp_lv1_1','yacc_c.py',291),
  ('exp_lv1_1 -> MOREEQUAL exp_lv2','exp_lv1_1',2,'p_exp_lv1_1','yacc_c.py',292),
  ('exp_lv1_1 -> EQUALTO exp_lv2','exp_lv1_1',2,'p_exp_lv1_1','yacc_c.py',293),
  ('exp_lv1_1 -> NOTEQUALTO exp_lv2','exp_lv1_1',2,'p_exp_lv1_1','yacc_c.py',294),
  ('exp_lv1_1 -> empty','exp_lv1_1',1,'p_exp_lv1_1','yacc_c.py',295),
  ('exp_lv2 -> exp_lv3','exp_lv2',1,'p_exp_lv2','yacc_c.py',298),
  ('exp_lv2 -> exp_lv3 SUMA exp_lv2','exp_lv2',3,'p_exp_lv2','yacc_c.py',299),
  ('exp_lv2 -> exp_lv3 SUB exp_lv2','exp_lv2',3,'p_exp_lv2','yacc_c.py',300),
  ('exp_lv3 -> exp_lv4','exp_lv3',1,'p_exp_lv3','yacc_c.py',303),
  ('exp_lv3 -> exp_lv4 MUL exp_lv3','exp_lv3',3,'p_exp_lv3','yacc_c.py',304),
  ('exp_lv3 -> exp_lv4 DIV exp_lv3','exp_lv3',3,'p_exp_lv3','yacc_c.py',305),
  ('exp_lv3 -> exp_lv4 RESD exp_lv3','exp_lv3',3,'p_exp_lv3','yacc_c.py',306),
  ('exp_lv4 -> exp_lv5','exp_lv4',1,'p_exp_lv4','yacc_c.py',309),
  ('exp_lv4 -> NOT exp_lv5','exp_lv4',2,'p_exp_lv4','yacc_c.py',310),
  ('exp_lv5 -> RPAREN expression LPAREN','exp_lv5',3,'p_exp_lv5','yacc_c.py',313),
  ('exp_lv5 -> var_cte','exp_lv5',1,'p_exp_lv5','yacc_c.py',314),
  ('exp_lv5 -> method','exp_lv5',1,'p_exp_lv5','yacc_c.py',315),
  ('exp_lv5 -> ID','exp_lv5',1,'p_exp_lv5','yacc_c.py',316),
  ('var_cte -> CTE_INT','var_cte',1,'p_var_cte','yacc_c.py',320),
  ('var_cte -> CTE_FLO','var_cte',1,'p_var_cte','yacc_c.py',321),
  ('var_cte -> CTE_BOO','var_cte',1,'p_var_cte','yacc_c.py',322),
  ('var_cte -> CTE_STRING','var_cte',1,'p_var_cte','yacc_c.py',323),
  ('var_cte -> CTE_CHAR','var_cte',1,'p_var_cte','yacc_c.py',324),
  ('method -> ID DOT method_t LPAREN method_1 RPAREN','method',6,'p_method','yacc_c.py',328),
  ('method_1 -> method_1_1','method_1',1,'p_method_1','yacc_c.py',331),
  ('method_1 -> empty','method_1',1,'p_method_1','yacc_c.py',332),
  ('method_1_1 -> method_v','method_1_1',1,'p_method_1_1','yacc_c.py',335),
  ('method_1_1 -> method_v COMA method_1_1','method_1_1',3,'p_method_1_1','yacc_c.py',336),
  ('method_t -> DEG','method_t',1,'p_method_t','yacc_c.py',339),
  ('method_t -> SHORTPATH','method_t',1,'p_method_t','yacc_c.py',340),
  ('method_t -> DIAMETER','method_t',1,'p_method_t','yacc_c.py',341),
  ('method_t -> ADD','method_t',1,'p_method_t','yacc_c.py',342),
  ('method_t -> DELETE','method_t',1,'p_method_t','yacc_c.py',343),
  ('method_t -> ARC','method_t',1,'p_method_t','yacc_c.py',344),
  ('method_v -> ID','method_v',1,'p_method_v','yacc_c.py',347),
  ('method_v -> LBRACK ID COMA ID RBRACK','method_v',5,'p_method_v','yacc_c.py',348),
  ('empty -> <empty>','empty',0,'p_empty','yacc_c.py',352),
]
